import React, { useState, useEffect } from "react";
import NavBar from '../templates/header';
import { GetSubTypes, createSub } from '../http/subApi';
import "../assets/adminCSS/sub-admin.scss";
import editSub from "../assets/images/editSub.png";
import delSub from "../assets/images/delSub.png";

const AdminSub = () => {
  const [subs, setSubs] = useState([]);
  const [showForm, setShowForm] = useState(false);
  const [newSub, setNewSub] = useState({
    title: '',
    duration: '',
    description: '',
    price: '',
    salePrice: '',
    sale: false
  });

  useEffect(() => {
    const fetchSubs = async () => {
      try {
        const response = await GetSubTypes();
        setSubs(response.data);
      } catch (error) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫:", error);
      }
    };

    fetchSubs();
  }, []);

  const handleEdit = (id) => {
    console.log("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —Å ID:", id);
  };

  const handleDelete = (id) => {
    console.log("–£–¥–∞–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É —Å ID:", id);
  };

  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setNewSub(prev => ({
      ...prev,
      [name]: value
    }));
  };

  const handleAddSub = async (e) => {
    e.preventDefault();

    const payload = {
      title: newSub.title,
      duration: +newSub.duration,
      description: newSub.description,
      price: +newSub.price,
      salePrice: newSub.salePrice ? +newSub.salePrice : null,
    };

    try {
      await createSub(payload); // üëà –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä

      // –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ –ë–î
      const updatedSubs = await GetSubTypes();
      setSubs(updatedSubs.data);

      // –°–±—Ä–æ—Å —Ñ–æ—Ä–º—ã
      setNewSub({ title: '', duration: '', description: '', price: '', salePrice: '', sale: false });
      setShowForm(false);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏:", error);
    }
  };


  return (
    <div>
      <NavBar />
      <div className="info-sub-admin">
        <p className="zag-sub-admin">–ù–∞—à–∏ –ø–æ–¥–ø–∏—Å–∫–∏</p>

        <button className="add-sub-btn" onClick={() => setShowForm(!showForm)}>
          {showForm ? "–°–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É" : "–î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É"}
        </button>

        {showForm && (
          <form className="sub-form" onSubmit={handleAddSub}>
            <input type="text" name="title" placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ" value={newSub.title} onChange={handleInputChange} required />
            <input type="number" name="duration" placeholder="–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–¥–Ω–µ–π)" value={newSub.duration} onChange={handleInputChange} required />
            <input type="text" name="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" value={newSub.description} onChange={handleInputChange} required />
            <input type="number" name="price" placeholder="–¶–µ–Ω–∞" value={newSub.price} onChange={handleInputChange} required />
            <input type="number" name="salePrice" placeholder="–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" value={newSub.salePrice} onChange={handleInputChange} />
            <button type="submit">–î–æ–±–∞–≤–∏—Ç—å</button>
          </form>
        )}

        <table className="sub-table">
          <thead>
            <tr>
              <th>‚Ññ</th>
              <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
              <th>–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è (–¥–Ω–µ–π)</th>
              <th>–û–ø–∏—Å–∞–Ω–∏–µ</th>
              <th>–¶–µ–Ω–∞</th>
              <th>–¶–µ–Ω–∞ —Å–æ —Å–∫–∏–¥–∫–æ–π</th>
              <th>–î–µ–π—Å—Ç–≤–∏—è</th>
            </tr>
          </thead>
          <tbody>
            {subs.map((sub, index) => (
              <tr key={sub.id}>
                <td>{index + 1}</td>
                <td>{sub.title}</td>
                <td>{sub.duration}</td>
                <td>{sub.description}</td>
                <td>{sub.price}‚ÇΩ</td>
                <td>{sub.sale ? `${sub.salePrice}‚ÇΩ` : "-"}</td>
                <td>
                  <button className="edit-btn" onClick={() => handleEdit(sub.id)}>
                    <img src={editSub} className="edit-del-icon" alt="edit" />
                  </button>
                  <button className="delete-btn" onClick={() => handleDelete(sub.id)}>
                    <img src={delSub} className="edit-del-icon" alt="delete" />
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default AdminSub;
